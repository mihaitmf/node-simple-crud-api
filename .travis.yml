language: node_js

node_js:
  - 14

env:
  - PROJECT_PATH_EXPRESS_SERVER=express-server
  - PROJECT_PATH_HTTP_SERVER=http-server
  - PROJECT_PATH_PROMISES=promises

stages:
  - express-server install
  - express-server build
  - express-server run container
  - express-server test
  - clean up docker
  - express-server run npm
  - express-server test
  - http-server run
  - http-server test
  - promises install
  - promises test
  - clean up node modules

jobs:
  include:
    - stage: express-server install
      script: npm --prefix $PROJECT_PATH_EXPRESS_SERVER ci $PROJECT_PATH_EXPRESS_SERVER
    - stage: express-server build
      script: $PROJECT_PATH_EXPRESS_SERVER/infra/build.sh
    - stage: express-server run container
      script: $PROJECT_PATH_EXPRESS_SERVER/infra/run.sh
    - stage: express-server test
      script:
        - curl -v "localhost:8080?hello=world&aaa=123"
        - curl -v -X POST -d "name=john&age=29" localhost:8080
    - stage: express-server run npm
      script: npm --prefix $PROJECT_PATH_EXPRESS_SERVER run start
    - stage: http-server run
      script: infra/docker/run-node.sh $PROJECT_PATH_HTTP_SERVER/http-server.js http-server 3000
    - stage: http-server test
      script:
        - curl -v "localhost:3000?hello=world&aaa=123"
        - curl -v -X POST -d "name=john&age=29" localhost:3000
    - stage: promises install
      script: npm --prefix $PROJECT_PATH_PROMISES ci $PROJECT_PATH_PROMISES
    - stage: promises test
      script:
        - npm --prefix $PROJECT_PATH_PROMISES run start
        - npm --prefix $PROJECT_PATH_PROMISES run github-user-details
    - stage: clean up docker
      script:
        - docker rmi $(docker images -aq)
        - docker rm -fv $(docker ps -aq)
    - stage: clean up node modules
      script:
        - rm -r $PROJECT_PATH_EXPRESS_SERVER/node_modules
        - rm -r $PROJECT_PATH_EXPRESS_PROMISES/node_modules
